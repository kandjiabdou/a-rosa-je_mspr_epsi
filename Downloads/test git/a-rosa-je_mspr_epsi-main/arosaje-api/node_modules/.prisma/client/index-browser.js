
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.9.0
 * Query Engine version: ceb5c99003b99c9ee2c1d2e618e359c14aef2ea5
 */
Prisma.prismaVersion = {
  client: "4.9.0",
  engine: "ceb5c99003b99c9ee2c1d2e618e359c14aef2ea5"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.AnnonceScalarFieldEnum = makeEnum({
  id_annonce: 'id_annonce',
  localisation: 'localisation',
  description: 'description',
  type_gardien: 'type_gardien',
  nb_signalement: 'nb_signalement',
  latidute: 'latidute',
  longitude: 'longitude',
  id_user: 'id_user'
});

exports.Prisma.BotanisteScalarFieldEnum = makeEnum({
  user: 'user'
});

exports.Prisma.ConseilScalarFieldEnum = makeEnum({
  id_consiel: 'id_consiel',
  date_conseil: 'date_conseil',
  message: 'message',
  idUser: 'idUser'
});

exports.Prisma.GardiennageScalarFieldEnum = makeEnum({
  id_gardiennage: 'id_gardiennage',
  date_debut: 'date_debut',
  date_fin: 'date_fin',
  description: 'description',
  id_user: 'id_user',
  idAnnonce: 'idAnnonce'
});

exports.Prisma.PhotoAnnonceScalarFieldEnum = makeEnum({
  id_photo: 'id_photo',
  lien: 'lien',
  date_photo: 'date_photo',
  idAnnonce: 'idAnnonce'
});

exports.Prisma.PhotoGardiennageScalarFieldEnum = makeEnum({
  id_photo: 'id_photo',
  lien: 'lien',
  date_photo: 'date_photo',
  idGardiennage: 'idGardiennage'
});

exports.Prisma.RoleScalarFieldEnum = makeEnum({
  id: 'id',
  nom: 'nom'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id_user: 'id_user',
  prenom: 'prenom',
  nom: 'nom',
  email: 'email',
  telephone: 'telephone',
  Numero_rue: 'Numero_rue',
  code_postale: 'code_postale',
  ville: 'ville',
  mdp: 'mdp',
  flag: 'flag'
});

exports.Prisma.User_lambdaScalarFieldEnum = makeEnum({
  user: 'user'
});


exports.Prisma.ModelName = makeEnum({
  Role: 'Role',
  User: 'User',
  Botaniste: 'Botaniste',
  User_lambda: 'User_lambda',
  Annonce: 'Annonce',
  Gardiennage: 'Gardiennage',
  PhotoGardiennage: 'PhotoGardiennage',
  PhotoAnnonce: 'PhotoAnnonce',
  Conseil: 'Conseil'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
