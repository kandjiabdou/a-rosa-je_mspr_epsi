{"ast":null,"code":"// Utilities\nimport { computed, ref, watch } from 'vue';\nimport { getCurrentInstance, toKebabCase } from \"../util/index.mjs\";\nimport { useToggleScope } from \"./toggleScope.mjs\"; // Types\n// Composables\nexport function useProxiedModel(props, prop, defaultValue) {\n  let transformIn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : v => v;\n  let transformOut = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : v => v;\n  const vm = getCurrentInstance('useProxiedModel');\n  const internal = ref(props[prop] !== undefined ? props[prop] : defaultValue);\n  const kebabProp = toKebabCase(prop);\n  const checkKebab = kebabProp !== prop;\n  const isControlled = checkKebab ? computed(() => {\n    var _vm$vnode$props, _vm$vnode$props2, _vm$vnode$props3, _vm$vnode$props4;\n    void props[prop];\n    return !!(((_vm$vnode$props = vm.vnode.props) != null && _vm$vnode$props.hasOwnProperty(prop) || (_vm$vnode$props2 = vm.vnode.props) != null && _vm$vnode$props2.hasOwnProperty(kebabProp)) && ((_vm$vnode$props3 = vm.vnode.props) != null && _vm$vnode$props3.hasOwnProperty(`onUpdate:${prop}`) || (_vm$vnode$props4 = vm.vnode.props) != null && _vm$vnode$props4.hasOwnProperty(`onUpdate:${kebabProp}`)));\n  }) : computed(() => {\n    var _vm$vnode$props5, _vm$vnode$props6;\n    void props[prop];\n    return !!((_vm$vnode$props5 = vm.vnode.props) != null && _vm$vnode$props5.hasOwnProperty(prop) && (_vm$vnode$props6 = vm.vnode.props) != null && _vm$vnode$props6.hasOwnProperty(`onUpdate:${prop}`));\n  });\n  useToggleScope(() => !isControlled.value, () => {\n    watch(() => props[prop], val => {\n      internal.value = val;\n    });\n  });\n  const model = computed({\n    get() {\n      return transformIn(isControlled.value ? props[prop] : internal.value);\n    },\n    set(value) {\n      const newValue = transformOut(value);\n      if ((isControlled.value ? props[prop] : internal.value) === newValue || transformIn(isControlled.value ? props[prop] : internal.value) === value) {\n        return;\n      }\n      internal.value = newValue;\n      vm == null ? void 0 : vm.emit(`update:${prop}`, newValue);\n    }\n  });\n  Object.defineProperty(model, 'externalValue', {\n    get: () => isControlled.value ? props[prop] : internal.value\n  });\n  return model;\n}","map":{"version":3,"mappings":"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","names":["computed","ref","watch","getCurrentInstance","toKebabCase","useToggleScope","useProxiedModel","props","prop","defaultValue","transformIn","v","transformOut","vm","internal","undefined","kebabProp","checkKebab","isControlled","vnode","_vm$vnode$props","hasOwnProperty","_vm$vnode$props2","_vm$vnode$props3","_vm$vnode$props4","_vm$vnode$props5","_vm$vnode$props6","value","val","model","get","set","newValue","emit","Object","defineProperty"],"sources":["../../src/composables/proxiedModel.ts"],"sourcesContent":["// Utilities\nimport { computed, ref, watch } from 'vue'\nimport { getCurrentInstance, toKebabCase } from '@/util'\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Types\nimport type { Ref } from 'vue'\n\ntype InnerVal<T> = T extends any[] ? Readonly<T> : T\n\n// Composables\nexport function useProxiedModel<\n  Props extends object & { [key in Prop as `onUpdate:${Prop}`]: ((val: any) => void) | undefined },\n  Prop extends Extract<keyof Props, string>,\n  Inner = Props[Prop],\n> (\n  props: Props,\n  prop: Prop,\n  defaultValue?: Props[Prop],\n  transformIn: (value?: Props[Prop]) => Inner = (v: any) => v,\n  transformOut: (value: Inner) => Props[Prop] = (v: any) => v,\n) {\n  const vm = getCurrentInstance('useProxiedModel')\n  const internal = ref(props[prop] !== undefined ? props[prop] : defaultValue) as Ref<Props[Prop]>\n  const kebabProp = toKebabCase(prop)\n  const checkKebab = kebabProp !== prop\n\n  const isControlled = checkKebab\n    ? computed(() => {\n      void props[prop]\n      return !!(\n        (vm.vnode.props?.hasOwnProperty(prop) || vm.vnode.props?.hasOwnProperty(kebabProp)) &&\n        (vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`) || vm.vnode.props?.hasOwnProperty(`onUpdate:${kebabProp}`))\n      )\n    })\n    : computed(() => {\n      void props[prop]\n      return !!(vm.vnode.props?.hasOwnProperty(prop) && vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`))\n    })\n\n  useToggleScope(() => !isControlled.value, () => {\n    watch(() => props[prop], val => {\n      internal.value = val\n    })\n  })\n\n  const model = computed({\n    get (): any {\n      return transformIn(isControlled.value ? props[prop] : internal.value)\n    },\n    set (value) {\n      const newValue = transformOut(value)\n      if (\n        (isControlled.value ? props[prop] : internal.value) === newValue ||\n        transformIn(isControlled.value ? props[prop] : internal.value) === value\n      ) {\n        return\n      }\n      internal.value = newValue\n      vm?.emit(`update:${prop}`, newValue)\n    },\n  }) as any as Ref<InnerVal<Inner>> & { readonly externalValue: Props[Prop] }\n\n  Object.defineProperty(model, 'externalValue', {\n    get: () => isControlled.value ? props[prop] : internal.value,\n  })\n\n  return model\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}