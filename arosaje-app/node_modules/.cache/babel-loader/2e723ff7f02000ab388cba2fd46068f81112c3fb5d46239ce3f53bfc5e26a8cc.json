{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createBlock as _createBlock, createElementVNode as _createElementVNode, createVNode as _createVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-42ea8d34\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"ChatsPage\"\n};\nconst _hoisted_2 = {\n  ref: \"messages\",\n  class: \"messages\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Message = _resolveComponent(\"Message\");\n  const _component_ChatBox = _resolveComponent(\"ChatBox\");\n  const _component_RegisterDialog = _resolveComponent(\"RegisterDialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.messages, message => {\n    return _openBlock(), _createBlock(_component_Message, {\n      key: message.id,\n      class: _normalizeClass([\"message\", {\n        right: message.isMine\n      }]),\n      dark: message.isMine,\n      text: message.text,\n      author: message.author\n    }, null, 8 /* PROPS */, [\"class\", \"dark\", \"text\", \"author\"]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createVNode(_component_ChatBox, {\n    class: \"chat-box\",\n    onSubmit: $options.onSubmit\n  }, null, 8 /* PROPS */, [\"onSubmit\"]), !_ctx.user ? (_openBlock(), _createBlock(_component_RegisterDialog, {\n    key: 0,\n    onSubmit: $options.onRegister\n  }, null, 8 /* PROPS */, [\"onSubmit\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","_ctx","messages","message","_createBlock","_component_Message","key","id","_normalizeClass","right","isMine","dark","text","author","_createVNode","_component_ChatBox","onSubmit","$options","user","_component_RegisterDialog","onRegister"],"sources":["C:\\Users\\toumy\\Desktop\\projet_mspr\\a-rosa-je_mspr_epsi\\arosaje-app\\src\\views\\messages.vue"],"sourcesContent":["<template>\r\n  <div class='ChatsPage'>\r\n    <div ref='messages' class='messages'>\r\n      <Message\r\n          v-for='message in messages'\r\n          :key='message.id'\r\n          :class='[\"message\", { right: message.isMine }]'\r\n          :dark='message.isMine'\r\n          :text='message.text'\r\n          :author='message.author'\r\n      />\r\n    </div>\r\n\r\n    <ChatBox\r\n        class='chat-box'\r\n        @submit='onSubmit'\r\n    />\r\n\r\n    <RegisterDialog\r\n        v-if='!user'\r\n        @submit='onRegister'\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Message from \"@/components/Message\";\r\nimport ChatBox from \"@/components/ChatBox\";\r\nimport  RegisterDialog from '@/components/RegistrerDialog.vue'\r\nimport { v1 as uid } from 'uuid';\r\nimport Vue from \"vue\";\r\n\r\nexport default {\r\n  name: 'ChatsPage',\r\n\r\n  // Here we register the components which\r\n  // we are going to use in the template\r\n  components: {\r\n    RegisterDialog,\r\n    ChatBox,\r\n    Message\r\n  },\r\n\r\n  // This is going to be called\r\n  //  when the component gets rendered\r\n  created() {\r\n    this.getChat();\r\n  },\r\n  methods: {\r\n    onRegister(event, name) {\r\n      event.preventDefault();\r\n\r\n      // Authentication is out of scope for this project\r\n      //  we just generate  uuid\r\n      this.user = { name, id: uid() };\r\n    },\r\n    getChat() {\r\n      const chatEndpoint = '/api/messages'; // Remplace par l'URL de ton endpoint pour recevoir les messages\r\n\r\n      fetch(chatEndpoint)\r\n          .then(response => response.json())\r\n          .then(messages => {\r\n            this.messages = messages.reverse().map(m => ({\r\n              ...m,\r\n              isMine: m.uid && m.uid === this.user?.id\r\n            }));\r\n\r\n            Vue.nextTick(() => {\r\n              const element = this.$refs['messages'];\r\n              element.scrollTo({ behavior: 'smooth', top: element.scrollHeight });\r\n            });\r\n          })\r\n          .catch(error => {\r\n            console.error('Erreur lors de la récupération des messages :', error);\r\n          });\r\n    },\r\n\r\n\r\n    // This method will be called when a new message is sent\r\n    onSubmit(event, text) {\r\n      event.preventDefault();\r\n\r\n      const sendMessageEndpoint = '/api/sendMessage'; // Remplace par l'URL de ton endpoint pour envoyer un message\r\n\r\n      const data = {\r\n        text,\r\n        uid: this.user?.id,\r\n        author: this.user?.name\r\n      };\r\n\r\n      fetch(sendMessageEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n          .then(response => response.json())\r\n          .then(responseData => {\r\n            // Le message a été envoyé avec succès\r\n          })\r\n          .catch(error => {\r\n            console.error('Erreur lors de l\\'envoi du message :', error);\r\n          });\r\n    }\r\n\r\n  },\r\n  data: () => ({\r\n    user: undefined,\r\n    messages: []\r\n  })\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\nbutton {\r\n  border: 0;\r\n  background: #2a60ff;\r\n  color: white;\r\n  cursor: pointer;\r\n  padding: 1rem;\r\n}\r\n\r\ninput {\r\n  border: 0;\r\n  padding: 1rem;\r\n  background: rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n.ChatsPage {\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.messages {\r\n  flex-grow: 1;\r\n  overflow: auto;\r\n  padding: 1rem;\r\n}\r\n\r\n.message + .message {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.message.right {\r\n  margin-left: auto;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACfC,GAAG,EAAC,UAAU;EAACD,KAAK,EAAC;;;;;;uBAD5BE,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,mBAAA,CASM,OATNC,UASM,I,kBARJH,mBAAA,CAOEI,SAAA,QAAAC,WAAA,CANoBC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBADlBC,YAAA,CAOEC,kBAAA;MALGC,GAAG,EAAEH,OAAO,CAACI,EAAE;MACfd,KAAK,EAAAe,eAAA;QAAAC,KAAA,EAAuBN,OAAO,CAACO;MAAM;MAC1CC,IAAI,EAAER,OAAO,CAACO,MAAM;MACpBE,IAAI,EAAET,OAAO,CAACS,IAAI;MAClBC,MAAM,EAAEV,OAAO,CAACU;;0DAIvBC,YAAA,CAGEC,kBAAA;IAFEtB,KAAK,EAAC,UAAU;IACfuB,QAAM,EAAEC,QAAA,CAAAD;0CAIFf,IAAA,CAAAiB,IAAI,I,cADfd,YAAA,CAGEe,yBAAA;;IADGH,QAAM,EAAEC,QAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}