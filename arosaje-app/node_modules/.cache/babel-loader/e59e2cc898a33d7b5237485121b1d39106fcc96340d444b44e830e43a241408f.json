{"ast":null,"code":"import Message from \"@/components/Message\";\nimport ChatBox from \"@/components/ChatBox\";\nimport RegisterDialog from '@/components/RegistrerDialog.vue';\nimport { v1 as uid } from 'uuid';\nimport Vue from \"vue\";\nexport default {\n  name: 'ChatsPage',\n  // Here we register the components which\n  // we are going to use in the template\n  components: {\n    RegisterDialog,\n    ChatBox,\n    Message\n  },\n  // This is going to be called\n  //  when the component gets rendered\n  created() {\n    this.getChat();\n  },\n  methods: {\n    onRegister(event, name) {\n      event.preventDefault();\n\n      // Authentication is out of scope for this project\n      //  we just generate  uuid\n      this.user = {\n        name,\n        id: uid()\n      };\n    },\n    getChat() {\n      const chatEndpoint = '/api/messages'; // Remplace par l'URL de ton endpoint pour recevoir les messages\n\n      fetch(chatEndpoint).then(response => response.json()).then(messages => {\n        this.messages = messages.reverse().map(m => ({\n          ...m,\n          isMine: m.uid && m.uid === this.user?.id\n        }));\n        Vue.nextTick(() => {\n          const element = this.$refs['messages'];\n          element.scrollTo({\n            behavior: 'smooth',\n            top: element.scrollHeight\n          });\n        });\n      }).catch(error => {\n        console.error('Erreur lors de la récupération des messages :', error);\n      });\n    },\n    // This method will be called when a new message is sent\n    onSubmit(event, text) {\n      event.preventDefault();\n      const sendMessageEndpoint = '/api/sendMessage'; // Remplace par l'URL de ton endpoint pour envoyer un message\n\n      const data = {\n        text,\n        uid: this.user?.id,\n        author: this.user?.name\n      };\n      fetch(sendMessageEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(responseData => {\n        // Le message a été envoyé avec succès\n      }).catch(error => {\n        console.error('Erreur lors de l\\'envoi du message :', error);\n      });\n    }\n  },\n  data: () => ({\n    user: undefined,\n    messages: []\n  })\n};","map":{"version":3,"names":["Message","ChatBox","RegisterDialog","v1","uid","Vue","name","components","created","getChat","methods","onRegister","event","preventDefault","user","id","chatEndpoint","fetch","then","response","json","messages","reverse","map","m","isMine","nextTick","element","$refs","scrollTo","behavior","top","scrollHeight","catch","error","console","onSubmit","text","sendMessageEndpoint","data","author","method","headers","body","JSON","stringify","responseData","undefined"],"sources":["C:\\Users\\toumy\\Desktop\\projet_mspr\\a-rosa-je_mspr_epsi\\arosaje-app\\src\\views\\messages.vue"],"sourcesContent":["<template>\r\n  <div class='ChatsPage'>\r\n    <div ref='messages' class='messages'>\r\n      <Message\r\n          v-for='message in messages'\r\n          :key='message.id'\r\n          :class='[\"message\", { right: message.isMine }]'\r\n          :dark='message.isMine'\r\n          :text='message.text'\r\n          :author='message.author'\r\n      />\r\n    </div>\r\n\r\n    <ChatBox\r\n        class='chat-box'\r\n        @submit='onSubmit'\r\n    />\r\n\r\n    <RegisterDialog\r\n        v-if='!user'\r\n        @submit='onRegister'\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Message from \"@/components/Message\";\r\nimport ChatBox from \"@/components/ChatBox\";\r\nimport  RegisterDialog from '@/components/RegistrerDialog.vue'\r\nimport { v1 as uid } from 'uuid';\r\nimport Vue from \"vue\";\r\n\r\nexport default {\r\n  name: 'ChatsPage',\r\n\r\n  // Here we register the components which\r\n  // we are going to use in the template\r\n  components: {\r\n    RegisterDialog,\r\n    ChatBox,\r\n    Message\r\n  },\r\n\r\n  // This is going to be called\r\n  //  when the component gets rendered\r\n  created() {\r\n    this.getChat();\r\n  },\r\n  methods: {\r\n    onRegister(event, name) {\r\n      event.preventDefault();\r\n\r\n      // Authentication is out of scope for this project\r\n      //  we just generate  uuid\r\n      this.user = { name, id: uid() };\r\n    },\r\n    getChat() {\r\n      const chatEndpoint = '/api/messages'; // Remplace par l'URL de ton endpoint pour recevoir les messages\r\n\r\n      fetch(chatEndpoint)\r\n          .then(response => response.json())\r\n          .then(messages => {\r\n            this.messages = messages.reverse().map(m => ({\r\n              ...m,\r\n              isMine: m.uid && m.uid === this.user?.id\r\n            }));\r\n\r\n            Vue.nextTick(() => {\r\n              const element = this.$refs['messages'];\r\n              element.scrollTo({ behavior: 'smooth', top: element.scrollHeight });\r\n            });\r\n          })\r\n          .catch(error => {\r\n            console.error('Erreur lors de la récupération des messages :', error);\r\n          });\r\n    },\r\n\r\n\r\n    // This method will be called when a new message is sent\r\n    onSubmit(event, text) {\r\n      event.preventDefault();\r\n\r\n      const sendMessageEndpoint = '/api/sendMessage'; // Remplace par l'URL de ton endpoint pour envoyer un message\r\n\r\n      const data = {\r\n        text,\r\n        uid: this.user?.id,\r\n        author: this.user?.name\r\n      };\r\n\r\n      fetch(sendMessageEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n          .then(response => response.json())\r\n          .then(responseData => {\r\n            // Le message a été envoyé avec succès\r\n          })\r\n          .catch(error => {\r\n            console.error('Erreur lors de l\\'envoi du message :', error);\r\n          });\r\n    }\r\n\r\n  },\r\n  data: () => ({\r\n    user: undefined,\r\n    messages: []\r\n  })\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\nbutton {\r\n  border: 0;\r\n  background: #2a60ff;\r\n  color: white;\r\n  cursor: pointer;\r\n  padding: 1rem;\r\n}\r\n\r\ninput {\r\n  border: 0;\r\n  padding: 1rem;\r\n  background: rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n.ChatsPage {\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.messages {\r\n  flex-grow: 1;\r\n  overflow: auto;\r\n  padding: 1rem;\r\n}\r\n\r\n.message + .message {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.message.right {\r\n  margin-left: auto;\r\n}\r\n</style>\r\n"],"mappings":"AA0BA,OAAOA,OAAM,MAAO,sBAAsB;AAC1C,OAAOC,OAAM,MAAO,sBAAsB;AAC1C,OAAQC,cAAa,MAAO,kCAAiC;AAC7D,SAASC,EAAC,IAAKC,GAAE,QAAS,MAAM;AAChC,OAAOC,GAAE,MAAO,KAAK;AAErB,eAAe;EACbC,IAAI,EAAE,WAAW;EAEjB;EACA;EACAC,UAAU,EAAE;IACVL,cAAc;IACdD,OAAO;IACPD;EACF,CAAC;EAED;EACA;EACAQ,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,EAAE;EAChB,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,KAAK,EAAEN,IAAI,EAAE;MACtBM,KAAK,CAACC,cAAc,EAAE;;MAEtB;MACA;MACA,IAAI,CAACC,IAAG,GAAI;QAAER,IAAI;QAAES,EAAE,EAAEX,GAAG;MAAG,CAAC;IACjC,CAAC;IACDK,OAAOA,CAAA,EAAG;MACR,MAAMO,YAAW,GAAI,eAAe,EAAE;;MAEtCC,KAAK,CAACD,YAAY,EACbE,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,EAAE,EAChCF,IAAI,CAACG,QAAO,IAAK;QAChB,IAAI,CAACA,QAAO,GAAIA,QAAQ,CAACC,OAAO,EAAE,CAACC,GAAG,CAACC,CAAA,KAAM;UAC3C,GAAGA,CAAC;UACJC,MAAM,EAAED,CAAC,CAACpB,GAAE,IAAKoB,CAAC,CAACpB,GAAE,KAAM,IAAI,CAACU,IAAI,EAAEC;QACxC,CAAC,CAAC,CAAC;QAEHV,GAAG,CAACqB,QAAQ,CAAC,MAAM;UACjB,MAAMC,OAAM,GAAI,IAAI,CAACC,KAAK,CAAC,UAAU,CAAC;UACtCD,OAAO,CAACE,QAAQ,CAAC;YAAEC,QAAQ,EAAE,QAAQ;YAAEC,GAAG,EAAEJ,OAAO,CAACK;UAAa,CAAC,CAAC;QACrE,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE,CAAC,CAAC;IACR,CAAC;IAGD;IACAE,QAAQA,CAACxB,KAAK,EAAEyB,IAAI,EAAE;MACpBzB,KAAK,CAACC,cAAc,EAAE;MAEtB,MAAMyB,mBAAkB,GAAI,kBAAkB,EAAE;;MAEhD,MAAMC,IAAG,GAAI;QACXF,IAAI;QACJjC,GAAG,EAAE,IAAI,CAACU,IAAI,EAAEC,EAAE;QAClByB,MAAM,EAAE,IAAI,CAAC1B,IAAI,EAAER;MACrB,CAAC;MAEDW,KAAK,CAACqB,mBAAmB,EAAE;QACzBG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;MAC3B,CAAC,EACIrB,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,EAAE,EAChCF,IAAI,CAAC4B,YAAW,IAAK;QACpB;MAAA,CACD,EACAb,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D,CAAC,CAAC;IACR;EAEF,CAAC;EACDK,IAAI,EAAEA,CAAA,MAAO;IACXzB,IAAI,EAAEiC,SAAS;IACf1B,QAAQ,EAAE;EACZ,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}